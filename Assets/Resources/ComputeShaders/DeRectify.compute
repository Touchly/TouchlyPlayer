#pragma kernel CSMain

//RWTexture2D<float4> In;
Texture2D<float4> In;
RWTexture2D<float4> Result;
#define PI    3.141592653589793
#define TWOPI 6.283185307179587
#define HPI   1.570796326794896
#define QPI   4.712388980384689

[numthreads(16, 16, 1)]
void CSMain (uint3 id : SV_DispatchThreadID) {
    uint rows, cols;
    Result.GetDimensions(cols, rows);
    if (id.x * id.y >= rows * cols)
        return;
    
    float theta = ((float)(id.y+0.5) / (rows)) * PI; //0 to pi
    float phi =  QPI - TWOPI * (float)(id.x+0.5) / (cols);

    float3 xyz;

    xyz.x = sin(theta) * cos(phi);
    xyz.y = -cos(theta);
    xyz.z = sin(theta) * sin(phi);

    float phi_new = acos(xyz.x); //igual
    float theta_new = atan2(-xyz.y,xyz.z); //igual

    uint rows_ll = cols;
    uint cols_ll = rows;

    float u = (1-(theta_new/PI))/2 * (float)(rows_ll) - 0.5; //igual
    float v = (1-(phi_new/PI))     * (float)(cols_ll) -0.5; //igual

    Result[id.xy] = saturate(In[float2(v,(u-0.25*cols)*2)]);
    //Result[id.xy] = In[float2(v,u)];
}